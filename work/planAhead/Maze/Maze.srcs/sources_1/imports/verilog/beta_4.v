/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module beta_4 (
    input clk,
    input rst,
    input up_button,
    input down_button,
    input left_button,
    input right_button,
    input hint_button,
    output reg win_sig,
    output reg lose_sig,
    output reg [2:0] xloc_out,
    output reg [2:0] yloc_out,
    output reg decctr_decrease
  );
  
  
  
  reg [15:0] inputAlu_a;
  
  reg [15:0] inputAlu_b;
  
  wire [16-1:0] M_game_alu_out;
  wire [1-1:0] M_game_alu_z;
  wire [1-1:0] M_game_alu_v;
  wire [1-1:0] M_game_alu_n;
  reg [6-1:0] M_game_alu_alufn;
  reg [16-1:0] M_game_alu_a;
  reg [16-1:0] M_game_alu_b;
  alu16bit_22 game_alu (
    .alufn(M_game_alu_alufn),
    .a(M_game_alu_a),
    .b(M_game_alu_b),
    .out(M_game_alu_out),
    .z(M_game_alu_z),
    .v(M_game_alu_v),
    .n(M_game_alu_n)
  );
  
  wire [1-1:0] M_edge_detector_out;
  reg [1-1:0] M_edge_detector_in;
  edge_detector_6 edge_detector (
    .clk(clk),
    .in(M_edge_detector_in),
    .out(M_edge_detector_out)
  );
  wire [1-1:0] M_ctr_value;
  counter_5 ctr (
    .clk(clk),
    .rst(rst),
    .value(M_ctr_value)
  );
  wire [6-1:0] M_game_controlunit_alufn;
  wire [3-1:0] M_game_controlunit_xsel;
  wire [3-1:0] M_game_controlunit_ysel;
  wire [1-1:0] M_game_controlunit_we_regfile;
  wire [1-1:0] M_game_controlunit_we_regfile_1;
  wire [5-1:0] M_game_controlunit_regfile_write_address;
  wire [5-1:0] M_game_controlunit_regfile_write_address_1;
  wire [5-1:0] M_game_controlunit_regfile_read_address_a;
  wire [5-1:0] M_game_controlunit_regfile_read_address_b;
  wire [5-1:0] M_game_controlunit_regfile_read_address_c;
  wire [2-1:0] M_game_controlunit_wdsel;
  wire [4-1:0] M_game_controlunit_rom_address;
  wire [1-1:0] M_game_controlunit_win_signal;
  wire [1-1:0] M_game_controlunit_lose_signal;
  wire [16-1:0] M_game_controlunit_direct_data;
  wire [1-1:0] M_game_controlunit_decctr_decrease;
  reg [1-1:0] M_game_controlunit_decrease_timer;
  reg [1-1:0] M_game_controlunit_up;
  reg [1-1:0] M_game_controlunit_down;
  reg [1-1:0] M_game_controlunit_left;
  reg [1-1:0] M_game_controlunit_right;
  reg [1-1:0] M_game_controlunit_hint;
  reg [8-1:0] M_game_controlunit_rom_data;
  reg [3-1:0] M_game_controlunit_x_location;
  reg [3-1:0] M_game_controlunit_y_location;
  reg [3-1:0] M_game_controlunit_temp_location_1;
  reg [3-1:0] M_game_controlunit_temp_location_2;
  reg [1-1:0] M_game_controlunit_timer_decrease;
  reg [1-1:0] M_game_controlunit_dificulity_level;
  fsm_controller_25 game_controlunit (
    .clk(clk),
    .rst(rst),
    .decrease_timer(M_game_controlunit_decrease_timer),
    .up(M_game_controlunit_up),
    .down(M_game_controlunit_down),
    .left(M_game_controlunit_left),
    .right(M_game_controlunit_right),
    .hint(M_game_controlunit_hint),
    .rom_data(M_game_controlunit_rom_data),
    .x_location(M_game_controlunit_x_location),
    .y_location(M_game_controlunit_y_location),
    .temp_location_1(M_game_controlunit_temp_location_1),
    .temp_location_2(M_game_controlunit_temp_location_2),
    .timer_decrease(M_game_controlunit_timer_decrease),
    .dificulity_level(M_game_controlunit_dificulity_level),
    .alufn(M_game_controlunit_alufn),
    .xsel(M_game_controlunit_xsel),
    .ysel(M_game_controlunit_ysel),
    .we_regfile(M_game_controlunit_we_regfile),
    .we_regfile_1(M_game_controlunit_we_regfile_1),
    .regfile_write_address(M_game_controlunit_regfile_write_address),
    .regfile_write_address_1(M_game_controlunit_regfile_write_address_1),
    .regfile_read_address_a(M_game_controlunit_regfile_read_address_a),
    .regfile_read_address_b(M_game_controlunit_regfile_read_address_b),
    .regfile_read_address_c(M_game_controlunit_regfile_read_address_c),
    .wdsel(M_game_controlunit_wdsel),
    .rom_address(M_game_controlunit_rom_address),
    .win_signal(M_game_controlunit_win_signal),
    .lose_signal(M_game_controlunit_lose_signal),
    .direct_data(M_game_controlunit_direct_data),
    .decctr_decrease(M_game_controlunit_decctr_decrease)
  );
  wire [8-1:0] M_rom_map;
  reg [4-1:0] M_rom_address;
  maze_map_rom_16 rom (
    .clk(clk),
    .rst(rst),
    .address(M_rom_address),
    .map(M_rom_map)
  );
  wire [3-1:0] M_reg_xlocation;
  wire [3-1:0] M_reg_ylocation;
  wire [3-1:0] M_reg_templocation_1;
  wire [3-1:0] M_reg_templocation_2;
  wire [16-1:0] M_reg_out_a;
  wire [16-1:0] M_reg_out_b;
  wire [16-1:0] M_reg_out_c;
  reg [5-1:0] M_reg_write_addres;
  reg [5-1:0] M_reg_write_addres_1;
  reg [1-1:0] M_reg_we;
  reg [1-1:0] M_reg_we_1;
  reg [16-1:0] M_reg_data;
  reg [5-1:0] M_reg_read_address_a;
  reg [5-1:0] M_reg_read_address_b;
  reg [5-1:0] M_reg_read_address_c;
  regfile_17 L_reg (
    .clk(clk),
    .rst(rst),
    .write_addres(M_reg_write_addres),
    .write_addres_1(M_reg_write_addres_1),
    .we(M_reg_we),
    .we_1(M_reg_we_1),
    .data(M_reg_data),
    .read_address_a(M_reg_read_address_a),
    .read_address_b(M_reg_read_address_b),
    .read_address_c(M_reg_read_address_c),
    .xlocation(M_reg_xlocation),
    .ylocation(M_reg_ylocation),
    .templocation_1(M_reg_templocation_1),
    .templocation_2(M_reg_templocation_2),
    .out_a(M_reg_out_a),
    .out_b(M_reg_out_b),
    .out_c(M_reg_out_c)
  );
  
  always @* begin
    M_edge_detector_in = M_ctr_value;
    M_game_controlunit_timer_decrease = M_edge_detector_out;
    decctr_decrease = M_game_controlunit_decctr_decrease;
    win_sig = M_game_controlunit_win_signal;
    lose_sig = M_game_controlunit_lose_signal;
    M_game_controlunit_dificulity_level = 1'h0;
    M_game_controlunit_decrease_timer = 1'h0;
    M_game_controlunit_up = up_button;
    M_game_controlunit_down = down_button;
    M_game_controlunit_left = left_button;
    M_game_controlunit_right = right_button;
    M_game_controlunit_hint = hint_button;
    M_reg_we = M_game_controlunit_we_regfile;
    M_reg_we_1 = M_game_controlunit_we_regfile_1;
    M_reg_write_addres = M_game_controlunit_regfile_write_address;
    M_reg_write_addres_1 = M_game_controlunit_regfile_write_address_1;
    M_reg_read_address_a = M_game_controlunit_regfile_read_address_a;
    M_reg_read_address_b = M_game_controlunit_regfile_read_address_b;
    M_reg_read_address_c = M_game_controlunit_regfile_read_address_c;
    M_game_controlunit_x_location = M_reg_xlocation;
    M_game_controlunit_y_location = M_reg_ylocation;
    M_game_controlunit_temp_location_1 = M_reg_templocation_1;
    M_game_controlunit_temp_location_2 = M_reg_templocation_2;
    M_rom_address = M_game_controlunit_rom_address;
    M_game_controlunit_rom_data = M_rom_map;
    
    case (M_game_controlunit_xsel)
      2'h0: begin
        inputAlu_a = M_reg_out_a;
      end
      2'h1: begin
        inputAlu_a = 6'h3c;
      end
      2'h2: begin
        inputAlu_a = M_game_controlunit_direct_data;
      end
      default: begin
        inputAlu_a = 1'h0;
      end
    endcase
    
    case (M_game_controlunit_ysel)
      2'h0: begin
        inputAlu_b = M_reg_out_b;
      end
      2'h1: begin
        inputAlu_b = 1'h1;
      end
      2'h2: begin
        inputAlu_b = 1'h0;
      end
      default: begin
        inputAlu_b = 1'h0;
      end
    endcase
    M_game_alu_a = inputAlu_a;
    M_game_alu_b = inputAlu_b;
    M_game_alu_alufn = M_game_controlunit_alufn;
    
    case (M_game_controlunit_wdsel)
      2'h1: begin
        M_reg_data = 16'h0000;
      end
      2'h2: begin
        M_reg_data = 16'hffff;
      end
      2'h0: begin
        M_reg_data = M_game_alu_out;
      end
      default: begin
        M_reg_data = M_game_alu_out;
      end
    endcase
    xloc_out = M_reg_xlocation;
    yloc_out = M_reg_ylocation;
  end
endmodule
