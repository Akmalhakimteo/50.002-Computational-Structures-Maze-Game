/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module regfile_17 (
    input clk,
    input rst,
    input [4:0] write_addres,
    input [4:0] write_addres_1,
    input we,
    input we_1,
    input [15:0] data,
    input [4:0] read_address_a,
    input [4:0] read_address_b,
    input [4:0] read_address_c,
    output reg [2:0] xlocation,
    output reg [2:0] ylocation,
    output reg [2:0] templocation_1,
    output reg [2:0] templocation_2,
    output reg [15:0] out_a,
    output reg [15:0] out_b,
    output reg [15:0] out_c
  );
  
  
  
  reg [2:0] M_x_loc_d, M_x_loc_q = 1'h0;
  reg [2:0] M_y_loc_d, M_y_loc_q = 1'h0;
  reg [2:0] M_temp_1_d, M_temp_1_q = 1'h0;
  reg [2:0] M_temp_2_d, M_temp_2_q = 1'h0;
  
  always @* begin
    M_x_loc_d = M_x_loc_q;
    M_temp_1_d = M_temp_1_q;
    M_temp_2_d = M_temp_2_q;
    M_y_loc_d = M_y_loc_q;
    
    if (we) begin
      
      case (write_addres)
        5'h00: begin
          M_x_loc_d = data;
        end
        5'h01: begin
          M_y_loc_d = data;
        end
        5'h02: begin
          M_temp_1_d = data;
        end
      endcase
    end
    
    case (read_address_a)
      5'h00: begin
        out_a = M_x_loc_q;
      end
      5'h01: begin
        out_a = M_y_loc_q;
      end
      5'h02: begin
        out_a = M_temp_1_q;
      end
      default: begin
        out_a = 1'h0;
      end
    endcase
    
    case (read_address_b)
      5'h00: begin
        out_b = M_x_loc_q;
      end
      5'h01: begin
        out_b = M_y_loc_q;
      end
      5'h02: begin
        out_b = M_temp_1_q;
      end
      default: begin
        out_b = 1'h0;
      end
    endcase
    
    case (read_address_c)
      5'h00: begin
        out_c = M_x_loc_q;
      end
      5'h01: begin
        out_c = M_y_loc_q;
      end
      5'h02: begin
        out_c = M_temp_1_q;
      end
      default: begin
        out_c = 1'h0;
      end
    endcase
    if (we_1) begin
      
      case (write_addres_1)
        5'h03: begin
          M_temp_2_d = data;
        end
      endcase
    end
    xlocation = M_x_loc_q;
    ylocation = M_y_loc_q;
    templocation_1 = M_temp_1_q;
    templocation_2 = M_temp_2_q;
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_x_loc_q <= 1'h0;
      M_y_loc_q <= 1'h0;
      M_temp_1_q <= 1'h0;
      M_temp_2_q <= 1'h0;
    end else begin
      M_x_loc_q <= M_x_loc_d;
      M_y_loc_q <= M_y_loc_d;
      M_temp_1_q <= M_temp_1_d;
      M_temp_2_q <= M_temp_2_d;
    end
  end
  
endmodule
